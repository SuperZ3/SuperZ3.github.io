import{c as n}from"./app.9dca4400.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u4FA6\u542C\u5668" tabindex="-1"><a class="header-anchor" href="#\u4FA6\u542C\u5668" aria-hidden="true">#</a> \u4FA6\u542C\u5668</h1><p>Watch \u63A5\u6536\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u4EC5\u5728\u6570\u636E source \u53D8\u5316\u65F6\u6267\u884C\u56DE\u8C03\u51FD\u6570\uFF0C\u53EF\u4EE5\u76D1\u542C\u5355\u4E00\u6570\u636E\u6E90\u4E5F\u53EF\u4EE5\u76D1\u542C\u591A\u4E2A\u6570\u636E\u6E90</p><h2 id="\u8FFD\u8E2A\u6570\u636E\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#\u8FFD\u8E2A\u6570\u636E\u53D8\u5316" aria-hidden="true">#</a> \u8FFD\u8E2A\u6570\u636E\u53D8\u5316</h2><p>effect \u51FD\u6570\u53EF\u4EE5\u54CD\u5E94\u6570\u636E\u7684\u53D8\u5316\uFF0C\u7528\u51FD\u6570 getter \u5C06 source \u5305\u88F9\u8D77\u6765\u653E\u5230 effect \u4E2D\u8BBF\u95EE\u4E00\u4E0B\uFF0C\u5C31\u53EF\u4EE5\u5C06 effect \u6536\u96C6\u5230\u6570\u636E\u4E2D\uFF08\u6CE8\u610F\u6E90\u7801\u7528\u7684 ReactiveEffect \u7C7B\uFF0C\u6B64\u5904\u7528 effect \u7B80\u5316\u5904\u7406\uFF09</p><p>source \u53EF\u80FD\u4E3A\uFF1A</p><ol><li>ref\u3001array\u3001function\uFF1A\u5728 getter \u4E2D\u8BBF\u95EE\u5BF9\u5E94\u7684\u503C\u6216\u904D\u5386 source\u6216\u6267\u884C source \u6536\u96C6 effect\uFF0C</li><li>reactive\uFF1A\u5728 getter \u4E2D\u8BBF\u95EE source\uFF0C\u540C\u65F6\u8BBE\u7F6E deep = true\uFF0C\u6BCF\u5C42\u5C5E\u6027\u90FD\u6536\u96C6 effect</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BBF\u95EE\u5BF9\u8C61\u7684\u6BCF\u4E2A\u5C5E\u6027\u6216\u503C</span>
<span class="token keyword">function</span> <span class="token function">trverse</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> seen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value
    seen <span class="token operator">=</span> seen <span class="token operator">||</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>value<span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSet</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isMap</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">traverse</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> <span class="token punctuation">{</span> immediate<span class="token punctuation">,</span> deep<span class="token punctuation">,</span> flush <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> instance <span class="token operator">=</span> currentInstance
    <span class="token keyword">let</span> getter
    <span class="token comment">// source: ref\u3001reactive\u3001array\u3001function</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> source<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReactive</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> source
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            source<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">s</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> s<span class="token punctuation">.</span>value
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReactive</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token function">traverse</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>cb <span class="token operator">&amp;&amp;</span> deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> baseGetter <span class="token operator">=</span> getter
        <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">trverse</span><span class="token punctuation">(</span><span class="token function">baseGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> effect <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        lazy<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        scheduler
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><h2 id="\u54CD\u5E94\u6570\u636E\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u6570\u636E\u53D8\u5316" aria-hidden="true">#</a> \u54CD\u5E94\u6570\u636E\u53D8\u5316</h2><p>\u5F53\u6570\u636E source \u53D1\u751F\u53D8\u5316\u5C31\u4F1A\u8C03\u7528 scheduler\uFF0C\u6B64\u65F6\u9700\u8981\u91CD\u65B0\u8BA1\u7B97\u65B0\u7684\u503C\uFF0C\u901A\u8FC7\u65B0\u8001\u503C\u7684\u5BF9\u6BD4\u6765\u5224\u65AD\u80FD\u5426\u8C03\u7528 cb</p><p>\u5BF9\u4E8E reactive \u5BF9\u8C61\uFF0C\u8FDB\u5165 scheduler \u65F6\u8BF4\u660E\u6709\u5C5E\u6027\u7684\u66F4\u65B0\uFF0C\u6B64\u65F6\u4E0D\u80FD\u901A\u8FC7\u5224\u65AD\u524D\u540E\u4E24\u6B21\u503C\u4E0D\u76F8\u7B49\u6765\u8C03\u7528 cb\uFF0C\u56E0\u4E3A\u76D1\u63A7\u7684\u662F reactive \u5BF9\u8C61\u4E0D\u662F\u5C5E\u6027\uFF0C\u7528 deep \u6765\u5F3A\u5236 cb \u6267\u884C</p><p>\u5BF9\u4E8E\u6570\u7EC4\u4E5F\u662F\u5982\u6B64\uFF0C\u5982\u679C\u5185\u90E8\u6709 reactive \u5BF9\u8C61\u5143\u7D20\uFF0C\u5F53\u5B83\u53D1\u751F\u6539\u53D8\u65F6\u4E5F\u8981\u5F3A\u5236 cb \u6267\u884C\u3002\u5982\u679C\u5185\u90E8\u6709 ref \u5BF9\u8C61\uFF0C\u9700\u8981\u5FAA\u73AF\u6570\u7EC4\u6765\u5BF9\u6BD4 ref \u7684\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> isMultiSource <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> forceTrigger <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token comment">// if (isReactive(source)) {</span>
<span class="token comment">//     deep = true</span>
<span class="token comment">// } else if (isArray(source)) {</span>
<span class="token comment">//     isMultiSource = true</span>
<span class="token comment">//     forceTrigger = source.some(isReactive)</span>
<span class="token comment">// }</span>
<span class="token keyword">let</span> oldValue <span class="token operator">=</span> isMultiSource <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">job</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
            deep <span class="token operator">||</span>
            forceTrigger <span class="token operator">||</span>
            <span class="token punctuation">(</span>isMultiSource 
                <span class="token operator">?</span> newValue<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">hasChanged</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> oldValue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
                <span class="token operator">:</span> <span class="token function">hasChanged</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">cb</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
            oldValue <span class="token operator">=</span> newValue
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u4F18\u5316\u66F4\u65B0\u9891\u7387" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u66F4\u65B0\u9891\u7387" aria-hidden="true">#</a> \u4F18\u5316\u66F4\u65B0\u9891\u7387</h2><p>\u540C\u524D\u9762\u8BB2\u7684\u4E00\u6837\uFF0C\u4E0D\u80FD\u76F4\u63A5\u5C06 job \u8D4B\u7ED9 scheduler\uFF0C\u5426\u5219\u9891\u7E41\u66F4\u65B0\u6D6A\u8D39\u6027\u80FD\uFF0C\u8FD9\u91CC\u540C\u6837\u5C06 job \u63A8\u5165\u4E00\u4E2A\u961F\u5217\u4E2D\u7EDF\u4E00\u6267\u884C</p><p>watcher \u9700\u8981\u5728 render \u4E4B\u524D\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">scheduler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">queuePreFlushCb</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span>

<span class="token comment">// \u4EE5\u4E0B\u51FD\u6570\u4E0D\u5C5E\u4E8E watch api\uFF0C\u53C2\u89C1\u524D\u9762\u7EC4\u4EF6\u521B\u5EFA\u7684\u6587\u7AE0</span>
<span class="token keyword">let</span> pendingPreFlushCbs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> preFlushIndex <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">function</span> <span class="token function">queuePreFlushCb</span><span class="token punctuation">(</span><span class="token parameter">cb<span class="token operator">:</span> SchedulerJob</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">queueCb</span><span class="token punctuation">(</span>cb<span class="token punctuation">,</span> pendingPreFlushCbs<span class="token punctuation">,</span> preFlushIndex<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">flushJobs</span><span class="token punctuation">(</span><span class="token parameter">seen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">flushPreFlushCbs</span><span class="token punctuation">(</span>seen<span class="token punctuation">)</span>
  <span class="token comment">// queue.sort ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u5B58\u50A8\u4E0A\u4E00\u6B21\u7684\u503C-\u6DFB\u52A0\u6E05\u7406" tabindex="-1"><a class="header-anchor" href="#\u5B58\u50A8\u4E0A\u4E00\u6B21\u7684\u503C-\u6DFB\u52A0\u6E05\u7406" aria-hidden="true">#</a> \u5B58\u50A8\u4E0A\u4E00\u6B21\u7684\u503C &amp; \u6DFB\u52A0\u6E05\u7406</h2><p>\u5982\u679C\u4F20\u5165\u4E86 immediate \u9700\u8981\u7ACB\u5373\u6267\u884C\u4E00\u6B21 cb \u4E5F\u5373 job\uFF0C\u5426\u5219\u7684\u8BDD\u5E94\u8BE5\u8C03\u7528 getter \u51FD\u6570\u5F97\u5230\u521D\u59CB\u503C\u4EE5\u4FBF\u4E8E\u4E0B\u6B21\u5BF9\u6BD4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        oldValue <span class="token operator">=</span> <span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD8\u8BB0\u5F97\u4E4B\u524D\u8BB2\u7684\u4F9D\u8D56\u548C\u526F\u4F5C\u7528\u7684\u53CC\u5411\u6536\u96C6\u5417\uFF1F\u5728\u6267\u884C <code>effect(cb)</code> \u7684\u56DE\u8C03 cb \u4E4B\u524D\uFF0C\u4F1A\u8C03\u7528 cleanupEffect\uFF0C\u5C06 effect \u4ECE\u6240\u6709\u6536\u96C6\u5B83\u7684\u5C5E\u6027\u4E2D\u5220\u9664\uFF0C\u6240\u4EE5\u6B64\u5904\u53EA\u9700\u8981\u7ED9\u6211\u4EEC\u7684 effect \u6DFB\u52A0\u4E00\u4E2A stop \u65B9\u6CD5\uFF0C\u5185\u90E8\u6267\u884C cleanupEffect \u5373\u53EF</p><p>\u7136\u540E\u8BA9 watch \u8FD4\u56DE\u4E00\u4E2A\u6E05\u7406\u51FD\u6570\uFF0C\u7EC8\u6781\u7248 watch \u5C31\u5B8C\u6210\u5566</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// other code</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        effect<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// other code</span>
    _effect<span class="token punctuation">.</span><span class="token function-variable function">stop</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cleanupEffect</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// const runner = _effect.bind(_effect)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,22);function t(e,c){return p}var l=s(a,[["render",t]]);export{l as default};
