import{c as n}from"./app.9dca4400.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u751F\u547D\u5468\u671F\u94A9\u5B50-composition" tabindex="-1"><a class="header-anchor" href="#\u751F\u547D\u5468\u671F\u94A9\u5B50-composition" aria-hidden="true">#</a> \u751F\u547D\u5468\u671F\u94A9\u5B50 Composition</h1><p>Vue 3 \u91C7\u7528 Composition API \u7684\u65B9\u5F0F\u7EC4\u7EC7\u4EE3\u7801\uFF0C\u5728 setup \u51FD\u6570\u4E2D\u8C03\u7528\u76F8\u5E94 API \u65B9\u6CD5\u5982 onMounted\u3001onBeforeUpdate \u5373\u53EF\u6CE8\u518C\u751F\u547D\u5468\u671F\u51FD\u6570</p><p>\u524D\u9762\u8BB2\u4E86\u7EC4\u4EF6\u6302\u8F7D\u548C\u66F4\u65B0\u6D41\u7A0B\uFF0C\u8FD9\u91CC\u5B9E\u73B0 onBeforeMount\u3001onMounted\u3001onBeforeUpdated\u3001onUpdated \u56DB\u4E2A\u94A9\u5B50</p><p>\u5728 setup \u6267\u884C\u65F6\u4F1A\u6267\u884C\u94A9\u5B50\u51FD\u6570\uFF0C\u6B64\u65F6\u53EF\u4EE5\u6536\u96C6\u56DE\u8C03\u51FD\u6570\u4FDD\u5B58\u5728 instance \u4E2D\uFF0C\u8FD9\u6837\u6267\u884C\u94A9\u5B50\u51FD\u6570\u65F6\u5C31\u53EF\u4EE5\u62FF\u5230\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> currentInstance <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">function</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> currentInstance
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">setCurrentInstance</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    currentInstance <span class="token operator">=</span> v
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">setupStatefulComponent</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>setup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// other code</span>
        <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span>
        <span class="token function">pauseTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> setupResult <span class="token operator">=</span> <span class="token function">setup</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>props<span class="token punctuation">,</span> setupContext<span class="token punctuation">)</span>
        <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">setCurrentInstance</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u4E0A\u9762\u6267\u884C setup \u524D\u8BBE\u7F6E\u4E86 currentInstance\uFF0C\u6240\u4EE5 <code>onBeforeMount(cb)</code> \u5982\u679C\u76F4\u63A5\u5C06 cb \u653E\u5230 instance \u4E0A\u4F1A\u6709\u95EE\u9898\uFF1A\u5F53 cb \u6267\u884C\u65F6\u5982\u679C\u5185\u90E8\u4F7F\u7528\u4E86 instance\uFF0C\u6307\u5411\u53EF\u80FD\u51FA\u9519\uFF0C\u6240\u4EE5\u9700\u8981\u5C06 cb \u5305\u88F9\u540E\u5728\u653E\u5230 instance \u4E0A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token keyword">enum</span> LifecycleHooks <span class="token punctuation">{</span>
  <span class="token constant">BEFORE_CREATE</span> <span class="token operator">=</span> <span class="token string">&#39;bc&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">CREATED</span> <span class="token operator">=</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">BEFORE_MOUNT</span> <span class="token operator">=</span> <span class="token string">&#39;bm&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">MOUNTED</span> <span class="token operator">=</span> <span class="token string">&#39;m&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">BEFORE_UPDATE</span> <span class="token operator">=</span> <span class="token string">&#39;bu&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">UPDATED</span> <span class="token operator">=</span> <span class="token string">&#39;u&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">BEFORE_UNMOUNT</span> <span class="token operator">=</span> <span class="token string">&#39;bum&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">UNMOUNTED</span> <span class="token operator">=</span> <span class="token string">&#39;um&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DEACTIVATED</span> <span class="token operator">=</span> <span class="token string">&#39;da&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">ACTIVATED</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">RENDER_TRIGGERED</span> <span class="token operator">=</span> <span class="token string">&#39;rtg&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">RENDER_TRACKED</span> <span class="token operator">=</span> <span class="token string">&#39;rtc&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">ERROR_CAPTURED</span> <span class="token operator">=</span> <span class="token string">&#39;ec&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">SERVER_PREFETCH</span> <span class="token operator">=</span> <span class="token string">&#39;sp&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">injectHook</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> hook<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> hooks <span class="token operator">=</span> target<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>target<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> <span class="token function-variable function">wrappedHook</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>isUnMounted<span class="token punctuation">)</span> <span class="token keyword">return</span>
            <span class="token function">pauseTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token function">setCurrentInstance</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
            <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">hook</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token function">setCurrentInstance</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> res
        <span class="token punctuation">}</span>
        hooks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>wrappedHook<span class="token punctuation">)</span>
        <span class="token keyword">return</span> wrappedHook
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">createHook</span> <span class="token operator">=</span> <span class="token parameter">lifeCycle</span> <span class="token operator">=&gt;</span> 
                        <span class="token punctuation">(</span><span class="token parameter">hook<span class="token punctuation">,</span> target <span class="token operator">=</span> currentInstance</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> 
                            <span class="token function">injectHook</span><span class="token punctuation">(</span>lifecycle<span class="token punctuation">,</span> hook<span class="token punctuation">,</span> target<span class="token punctuation">)</span>

<span class="token keyword">const</span> onBeforeMount <span class="token operator">=</span> <span class="token function">createHook</span><span class="token punctuation">(</span>LifecycleHooks<span class="token punctuation">.</span><span class="token constant">BEFORE_MOUNT</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> onMounted <span class="token operator">=</span> <span class="token function">createHook</span><span class="token punctuation">(</span>LifecycleHooks<span class="token punctuation">.</span><span class="token constant">MOUNTED</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> onBeforeUpdate <span class="token operator">=</span> <span class="token function">createHook</span><span class="token punctuation">(</span>LifecycleHooks<span class="token punctuation">.</span><span class="token constant">BEFORE_UPDATE</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> onUpdated <span class="token operator">=</span> <span class="token function">createHook</span><span class="token punctuation">(</span>LifecycleHooks<span class="token punctuation">.</span><span class="token constant">UPDATED</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u63A5\u4E0B\u6765\u5728\u5BF9\u5E94\u4F4D\u7F6E\u6267\u884C\u751F\u547D\u5468\u671F\u51FD\u6570\uFF0C\u6CE8\u610F updated \u548C mounted \u94A9\u5B50\uFF0C\u524D\u9762\u8BB2\u8FC7 <code>instance.render</code> \u4F1A\u653E\u5230\u961F\u5217 queue \u4E2D\uFF0C\u5728\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\u7EDF\u4E00\u6267\u884C\uFF0C\u6240\u4EE5\u8FD9\u91CC\u540C\u6837\u8981\u5C06\u94A9\u5B50\u7684\u56DE\u8C03\u653E\u5230\u4E00\u4E2A\u961F\u5217\u4E2D\uFF0C\u5728 job \u540E\u6E05\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">invokeArrayFns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fns<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">componentUpdateFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">.</span>isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> bm<span class="token punctuation">,</span> m <span class="token punctuation">}</span> <span class="token operator">=</span> instance
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">invokeArrayFns</span><span class="token punctuation">(</span>bm<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// const subTree = ...</span>
        <span class="token comment">// initialVNode.el = subTree.el</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">queuePostFlushCb</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// instance.isMounted = true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> bu<span class="token punctuation">,</span> u <span class="token punctuation">}</span> <span class="token operator">=</span> instance
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bu<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">invokeArrayFns</span><span class="token punctuation">(</span>bu<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// const nextTree = instance.render.call(proxyToUse, proxyToUse)</span>
        <span class="token comment">// patch(prevTree, nextTree, hostParentNode(prevTree.el))</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">queuePostFlushCb</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> pendingPostFlushCbs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> postFlushIndex <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">function</span> <span class="token function">queuePostFlushCb</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">queue</span><span class="token punctuation">(</span>cb<span class="token punctuation">,</span> pendingPostFlushCbs<span class="token punctuation">,</span> postFlushIndex<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">queue</span><span class="token punctuation">(</span><span class="token parameter">cb<span class="token punctuation">,</span> pendingQueue<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pendingQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>cb<span class="token punctuation">)</span>
    <span class="token function">queueFlush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">flushJobs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span><span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token function">flushPostFlushCbs</span><span class="token punctuation">(</span>seen<span class="token punctuation">)</span>
        isFlushing <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">flushPostFlushCbs</span><span class="token punctuation">(</span><span class="token parameter">seen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pendingPostFlushCbs<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pendingPostFlushCbs<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getId</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getId</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
        pendingPostFlushCbs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">cb</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        postFlushIndex <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div>`,9);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
