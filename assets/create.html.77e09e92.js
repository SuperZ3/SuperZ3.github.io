import{c as n}from"./app.9dca4400.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u7EC4\u4EF6\u521B\u5EFA\u53CA\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u521B\u5EFA\u53CA\u66F4\u65B0" aria-hidden="true">#</a> \u7EC4\u4EF6\u521B\u5EFA\u53CA\u66F4\u65B0</h1><p>vue \u505A\u7684\u4E3B\u8981\u5DE5\u4F5C\u662F\u5C06 template \u6A21\u677F\u6216\u8005 h \u51FD\u6570\u521B\u5EFA\u7684\u89C6\u56FE\u63D2\u5165\u5230\u9875\u9762\u76F8\u5E94\u7684\u4F4D\u7F6E\uFF0C\u5728\u6570\u636E\u66F4\u65B0\u65F6\u901A\u77E5\u89C6\u56FE\u66F4\u65B0</p><h2 id="_1-\u521B\u5EFA\u5E94\u7528\u5B9E\u4F8B-app" tabindex="-1"><a class="header-anchor" href="#_1-\u521B\u5EFA\u5E94\u7528\u5B9E\u4F8B-app" aria-hidden="true">#</a> 1. \u521B\u5EFA\u5E94\u7528\u5B9E\u4F8B app</h2><p>\u4F7F\u7528 vue3 \u65F6\u9996\u5148\u901A\u8FC7 createApp \u521B\u5EFA\u4E00\u4E2A\u5E94\u7528\u5B9E\u4F8B\uFF0C\u8C03\u7528 <code>app.mount(container)</code> \u5C06\u7EC4\u4EF6\u63D2\u5165 container \u7684\u4F4D\u7F6E</p><p>app \u901A\u8FC7 createRenderer \u521B\u5EFA\uFF0C\u8BE5\u65B9\u6CD5\u53EF\u4EE5\u9488\u5BF9\u4E0D\u540C\u5E73\u53F0\u521B\u5EFA\u4E0D\u540C\u6E32\u67D3\u5668\uFF0C\u4F20\u5165 rendererOptions \u5C31\u53EF\u4EE5\u521B\u5EFA\u9488\u5BF9 dom \u64CD\u4F5C\u7684\u6E32\u67D3\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patchEvent</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> prevValue<span class="token punctuation">,</span> nextValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> invokers <span class="token operator">=</span> el<span class="token punctuation">.</span>_vei <span class="token operator">||</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>_vel <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> existing <span class="token operator">=</span> invokers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nextValue <span class="token operator">&amp;&amp;</span> existing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        existing<span class="token punctuation">.</span>value <span class="token operator">=</span> nextValue
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nextValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> invoker <span class="token operator">=</span> invokers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> <span class="token function-variable function">invoker</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    invoker<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                invoker<span class="token punctuation">.</span>value <span class="token operator">=</span> nextValue
                <span class="token keyword">return</span> invoker
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> invoker<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> nextValue<span class="token punctuation">,</span> existing<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">patchProp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> preValue<span class="token punctuation">,</span> nextValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;class&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span>className <span class="token operator">=</span> nextValue
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> nextValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> nextValue<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;on&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        key <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">patchEvent</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> prevValue<span class="token punctuation">,</span> nextValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> nodOpts <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">insert</span><span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> referenceNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        parent<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> referenceNode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">remove</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> parent <span class="token operator">=</span> child<span class="token punctuation">.</span>parentNode
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">createElement</span><span class="token operator">:</span> <span class="token parameter">tag</span> <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">createText</span><span class="token operator">:</span> <span class="token parameter">content</span> <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">setText</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span>nodeValue <span class="token operator">=</span> content<span class="token punctuation">,</span>
    <span class="token function-variable function">setElementText</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>textContent <span class="token operator">=</span> content<span class="token punctuation">,</span>
    <span class="token function-variable function">parentNode</span><span class="token operator">:</span> <span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span>parentNode<span class="token punctuation">,</span>
    <span class="token function-variable function">nextSibling</span><span class="token operator">:</span> <span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span>nextSibling<span class="token punctuation">,</span>
    <span class="token function-variable function">querySelector</span><span class="token operator">:</span> <span class="token parameter">selector</span> <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span><span class="token function">querySlector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">cloneNode</span><span class="token operator">:</span> <span class="token parameter">el</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> renderer
<span class="token keyword">const</span> rendererOptions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span>patchProp<span class="token punctuation">}</span><span class="token punctuation">,</span> nodeOpts<span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">ensureRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> renderer <span class="token operator">||</span> <span class="token function">createRenderer</span><span class="token punctuation">(</span>rendererOptions<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// createApp \u63A5\u6536\u4E00\u4E2A rootComponent \u548C rootProp</span>
<span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">ensureRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> mount <span class="token punctuation">}</span> <span class="token operator">=</span> app
    app<span class="token punctuation">.</span><span class="token function-variable function">mount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        container <span class="token operator">=</span> <span class="token keyword">typeof</span> container <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> 
            <span class="token operator">?</span> <span class="token function">querySelector</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span> 
            <span class="token operator">:</span> container
        container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
        <span class="token function">mount</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> app
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><p>\u63A5\u4E0B\u6765\u901A\u8FC7 createRenderer \u521B\u5EFA\u6E32\u67D3\u5668\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B createApp\u3001render \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF1A</p><ol><li>render \u4E3A\u6E32\u67D3\u65B9\u6CD5\uFF0C\u7528\u4E8E\u5C06 vnode \u8F6C\u5316\u6210\u771F\u5B9E dom \u8282\u70B9\u63D2\u5165 container \u4E2D</li><li>createApp \u521B\u5EFA\u5E94\u7528\u5B9E\u4F8B\uFF0C\u63A5\u6536\u6839\u7EC4\u4EF6\u3001\u6839\u5C5E\u6027\uFF0C\u8FD4\u56DE\u7684\u5B9E\u4F8B\u5305\u62EC mixin\u3001use\u3001mount \u7B49\u65B9\u6CD5</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> uid <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">let</span> isMounted <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">function</span> <span class="token function">createAppAPI</span><span class="token punctuation">(</span><span class="token parameter">render</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token parameter">rootComponent<span class="token punctuation">,</span> rootProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token punctuation">{</span>
            _uid<span class="token operator">:</span> uid<span class="token operator">++</span><span class="token punctuation">,</span>
            _component<span class="token operator">:</span> rootComponent<span class="token punctuation">,</span>
            _props<span class="token operator">:</span> rootProp<span class="token punctuation">,</span>
            _instance<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
            _container<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
            <span class="token comment">// \u751F\u6210 vnode \u4EA4\u7ED9 render \u6302\u8F7D</span>
            <span class="token function">mount</span><span class="token punctuation">(</span><span class="token parameter">container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>rootComponent<span class="token punctuation">,</span> rootProps<span class="token punctuation">)</span>
                    <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
                    isMounted <span class="token operator">=</span> <span class="token boolean">true</span>
                    app<span class="token punctuation">.</span>_container <span class="token operator">=</span> container
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> app
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createRenderer</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
        insert<span class="token operator">:</span> hostInsert<span class="token punctuation">,</span>
        remove<span class="token operator">:</span> hostRemove<span class="token punctuation">,</span>
        createElement<span class="token operator">:</span> hostCreateElement<span class="token punctuation">,</span>
        createText<span class="token operator">:</span> hostCreateText<span class="token punctuation">,</span>
        setText<span class="token operator">:</span> hostSetText<span class="token punctuation">,</span>
        setElementText<span class="token operator">:</span> hostSetElementText<span class="token punctuation">,</span>
        parentNode<span class="token operator">:</span> hostParentNode<span class="token punctuation">,</span>
        nextSibling<span class="token operator">:</span> hostNextSibling<span class="token punctuation">,</span>
        cloneNode<span class="token operator">:</span> hostCloneNode<span class="token punctuation">,</span>
        patchProp<span class="token operator">:</span> hostPatchProps
    <span class="token punctuation">}</span> <span class="token operator">=</span> options
    <span class="token comment">// \u5C06 vnode \u8F6C\u5316\u6210\u771F\u5B9E dom \u6302\u5230 container \u4E0A</span>
    <span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        render<span class="token punctuation">,</span>
        createApp<span class="token operator">:</span> <span class="token function">createAppAPI</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h2 id="_2-\u521B\u5EFA-vnode" tabindex="-1"><a class="header-anchor" href="#_2-\u521B\u5EFA-vnode" aria-hidden="true">#</a> 2. \u521B\u5EFA vnode</h2><p>\u4ECE\u6839\u7EC4\u4EF6\u5F00\u59CB\u521B\u5EFA vnode\uFF0C\u63A5\u6536\u7684 rootComponent \u7684\u7C7B\u578B\u53EF\u80FD\u4E3A\u7EC4\u4EF6\u3001\u51FD\u6570\u7EC4\u4EF6\u6216\u5B57\u7B26\u4E32\uFF0C\u8FD4\u56DE\u7684 vnode \u662F\u4E00\u4E2A\u5305\u542B\u8282\u70B9\u7C7B\u578B\u3001\u5C5E\u6027\u3001\u5B50\u8282\u70B9\u7B49\u5C5E\u6027\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token keyword">enum</span> ShapeFlags <span class="token punctuation">{</span>
  <span class="token constant">ELEMENT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">FUNCTIONAL_COMPONENT</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">STATEFUL_COMPONENT</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token constant">TEXT_CHILDREN</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token constant">ARRAY_CHILDREN</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token constant">COMPONENT</span> <span class="token operator">=</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">STATEFUL_COMPONENT</span> <span class="token operator">|</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">FUNCTIONAL_COMPONENT</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createVNode</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> props <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> children <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> shapeFlag <span class="token operator">=</span> <span class="token function">isString</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
        <span class="token operator">?</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ELEMENT</span>
            <span class="token operator">:</span> <span class="token function">isObject</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
                <span class="token operator">?</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">STATEFUL_COMPONENT</span>
                    <span class="token operator">:</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
                        <span class="token operator">?</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">FUNCTIONAL_COMPONENT</span>
                            <span class="token operator">:</span> <span class="token number">0</span>

    <span class="token keyword">return</span> <span class="token function">createBaseVNode</span><span class="token punctuation">(</span>
        type<span class="token punctuation">,</span>
        props<span class="token punctuation">,</span>
        shapeFlag<span class="token punctuation">,</span>
        children
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createBaseVNode</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> props<span class="token punctuation">,</span> shapeFlag<span class="token punctuation">,</span> children</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token punctuation">{</span>
        __v_isVNode<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        type<span class="token punctuation">,</span>
        props<span class="token punctuation">,</span>
        key<span class="token operator">:</span> props <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>key<span class="token punctuation">,</span>
        children<span class="token punctuation">,</span>
        component<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        el<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        shapeFlag<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token function">normalization</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> children<span class="token punctuation">)</span>
    <span class="token keyword">return</span> vnode
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">normalization</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> children</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u6807\u5FD7\u5B50\u8282\u70B9\u7C7B\u578B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>children <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vnode<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        type <span class="token operator">=</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        type <span class="token operator">=</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">TEXT_CHILDREN</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6807\u5FD7\u8282\u70B9\u548C\u5B50\u8282\u70B9\u7C7B\u578B</span>
    vnode<span class="token punctuation">.</span>shapeFlag <span class="token operator">|=</span> type
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h2 id="_3-\u6E32\u67D3\u65B9\u6CD5-render" tabindex="-1"><a class="header-anchor" href="#_3-\u6E32\u67D3\u65B9\u6CD5-render" aria-hidden="true">#</a> 3. \u6E32\u67D3\u65B9\u6CD5 render</h2><p>\u6709\u4E86 vnode \u5C31\u53EF\u4EE5\u8C03\u7528 render \u65B9\u6CD5\u6E32\u67D3\uFF0C\u6839\u636E\u4E0D\u540C\u7684 vnode \u7C7B\u578B\uFF0C\u8C03\u7528\u76F8\u5E94\u7684 processX \u65B9\u6CD5\u5B8C\u6210\u6700\u7EC8\u7684\u6302\u8F7D</p><p>\u5047\u8BBE\u4E0A\u9762\u7684 rootComponent \u662F\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u5219\u5728\u6B64\u9636\u6BB5\u8C03\u7528 processComponent \u8FDB\u884C\u6302\u8F7D</p><p>\u6302\u8F7D\u6D41\u7A0B\u6216\u8005\u8BF4\u7EC4\u4EF6\u521D\u6B21\u6E32\u67D3\u53EF\u4EE5\u770B\u4F5C\u65E7\u7684 vnode \u8282\u70B9\u662F null \u7684\u66F4\u65B0\u8FC7\u7A0B\uFF0C\u6240\u4EE5 render \u6839\u636E\u65B0\u7684 vnode \u8282\u70B9\u66F4\u65B0\u65E7\u7684 vnode \u8282\u70B9\uFF0C\u7136\u540E\u518D\u521B\u5EFA\u76F8\u5E94\u5143\u7D20\u63D2\u5165\u9875\u9762</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createRenderer</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">processComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u521D\u59CB\u6E32\u67D3\u6D41\u7A0B</span>
            <span class="token function">mountComponent</span><span class="token punctuation">(</span>n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u66F4\u65B0\u6D41\u7A0B</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">patch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">===</span> n2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> shapeFlag <span class="token punctuation">}</span> <span class="token operator">=</span> n2
        <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ELEMENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// type \u662F\u5143\u7D20</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">COMPONENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// type \u662F\u7EC4\u4EF6</span>
            <span class="token function">processComponent</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5C06 vnode \u8F6C\u5316\u6210\u771F\u5B9E dom \u6302\u5230 container \u4E0A</span>
    <span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">patch</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span>_vnode <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
        container<span class="token punctuation">.</span>_vnode <span class="token operator">=</span> vnode 
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        render<span class="token punctuation">,</span>
        createApp<span class="token operator">:</span> <span class="token function">createAppAPI</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="_4-h-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_4-h-\u51FD\u6570" aria-hidden="true">#</a> 4. h \u51FD\u6570</h2><p>\u5728\u6267\u884C\u7EE7\u7EED\u4E4B\u524D\uFF0C\u5148\u4ECB\u7ECD\u4E0B h \u51FD\u6570\uFF0C\u5B83\u901A\u8FC7\u5C01\u88C5 createVNode \u6765\u521B\u5EFA vnode</p><p>\u5728\u7EC4\u4EF6\u7684 render \u65B9\u6CD5\u5185\uFF0C\u901A\u5E38\u8C03\u7528 h \u51FD\u6570\u6765\u521B\u5EFA\u7EC4\u4EF6\u6700\u7EC8\u9700\u8981\u6E32\u67D3\u7684\u5185\u5BB9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8C03\u7528 h \u7684\u51E0\u79CD\u65B9\u5F0F\uFF1A</span>
<span class="token comment">// 1. h(type)</span>
<span class="token comment">// 2. h(type, { props: {...} })</span>
<span class="token comment">// 3. h(type, [ h(type), ...] )</span>
<span class="token comment">// 4. h(type, { props: {...} }, [ h(type), ... ])</span>
<span class="token comment">// 5. h(type, Component)</span>
<span class="token comment">// \u5176\u4E2D type \u53EF\u80FD\u4E3A\uFF1A</span>
<span class="token comment">// a. div\u3001h \u7B49\u6807\u7B7E\u540D</span>
<span class="token comment">// b. \u7EC4\u4EF6 Component</span>
<span class="token comment">// c. \u51FD\u6570\u5F0F\u7EC4\u4EF6</span>
<span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> propsOrChildren <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> children <span class="token operator">=</span> <span class="token keyword">undefined</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> l <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>propsOrChildren<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isArray</span><span class="token punctuation">(</span>propsOrChildren<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isVNode</span><span class="token punctuation">(</span>propsOrChildren<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>propsOrChildren<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5C5E\u6027</span>
            <span class="token keyword">return</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> propsOrChildren<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// children</span>
            <span class="token keyword">return</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> propsOrChildren<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            children <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">===</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isVNode</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                children <span class="token operator">=</span> <span class="token punctuation">[</span>children<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> propsOrChildren<span class="token punctuation">,</span> children<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="_5-\u6302\u8F7D\u7EC4\u4EF6-component" tabindex="-1"><a class="header-anchor" href="#_5-\u6302\u8F7D\u7EC4\u4EF6-component" aria-hidden="true">#</a> 5. \u6302\u8F7D\u7EC4\u4EF6 component</h2><p>\u5BF9\u7EC4\u4EF6\u7684\u6302\u8F7D\u4E3B\u8981\u5728 mountComponent \u65B9\u6CD5\u4E2D\u8FDB\u884C\uFF0C\u9996\u5148\u5904\u7406\u7EC4\u4EF6\u5B9E\u4F8B\uFF0C\u8BBE\u7F6E\u540E\u9762\u8981\u7528\u5230\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u4E3A\u6302\u8F7D\u505A\u51C6\u5907\uFF1A</p><ol><li><p>\u6839\u636E vnode \u521B\u5EFA\u7EC4\u4EF6\u5B9E\u4F8B instance\uFF0C\u6DFB\u52A0 uid\u3001props\u3001render \u7B49\u5C5E\u6027</p></li><li><p>\u5411 instance \u6DFB\u52A0 props\u3001slots \u7B49\u5C5E\u6027\uFF0C\u8BBE\u7F6E instance.render \u4E3A\u7528\u6237\u4F20\u5165\u7EC4\u4EF6\u7684 setup \u51FD\u6570\u8FD4\u56DE\u503C\uFF0C\u6216\u8005\u7EC4\u4EF6\u7684 render \u65B9\u6CD5</p></li><li><p>\u6267\u884C\u7B2C 2 \u6B65\u5F97\u5230\u7684 instance.render \u51FD\u6570\u5F00\u59CB\u6302\u8F7D\u6D41\u7A0B</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> uid <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u8FD9\u91CC\u7684 uid \u8DDF\u4E0A\u9762\u7684\u4E0D\u5728\u540C\u4E00\u4E2A\u6587\u4EF6</span>
<span class="token keyword">const</span> PublicInstanceProxyHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span> _<span class="token operator">:</span> instance <span class="token punctuation">}</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> ctx<span class="token punctuation">,</span> setupState<span class="token punctuation">,</span> props <span class="token punctuation">}</span> <span class="token operator">=</span> instance
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;$&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>setupState<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> setupState<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> ctx<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span> _<span class="token operator">:</span> instance <span class="token punctuation">}</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> ctx<span class="token punctuation">,</span> setupState<span class="token punctuation">,</span> props <span class="token punctuation">}</span> <span class="token operator">=</span> instance
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>setupState<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            setupState<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;props can not set&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ctx<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createRenderer</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// other code</span>
    <span class="token keyword">const</span> <span class="token function-variable function">mountComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">initialVNode<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1. \u521B\u5EFA\u7EC4\u4EF6\u5B9E\u4F8B</span>
        <span class="token keyword">const</span> instance <span class="token operator">=</span> initialVNode<span class="token operator">?.</span>component <span class="token operator">||</span> 
            <span class="token punctuation">(</span>initialVNode<span class="token punctuation">.</span>component <span class="token operator">=</span> <span class="token function">createComponentInstance</span><span class="token punctuation">(</span>initialVNode<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// 2. \u5904\u7406 prop\u3001slots\u3001\u8C03\u7528 setup\u3001\u521D\u59CB\u5316 render</span>
        <span class="token function">setupComponent</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span>
        <span class="token comment">// 3. \u6267\u884C instance.render</span>
        <span class="token function">setupRenderEffect</span><span class="token punctuation">(</span>
            instance<span class="token punctuation">,</span>
            initialVNode<span class="token punctuation">,</span>
            container<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">createComponentInstance</span><span class="token punctuation">(</span><span class="token parameter">vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token punctuation">{</span>
            uid<span class="token operator">:</span> uid<span class="token operator">++</span><span class="token punctuation">,</span>
            vnode<span class="token punctuation">,</span>
            type<span class="token operator">:</span> vnode<span class="token punctuation">.</span>type<span class="token punctuation">,</span>
            ctx<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            props<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            attrs<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            setupState<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            render<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
            isMounted<span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
        instance<span class="token punctuation">.</span>ctx <span class="token operator">=</span> <span class="token punctuation">{</span> _<span class="token operator">:</span> instance <span class="token punctuation">}</span>
        <span class="token keyword">return</span> instance
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">setupComponent</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> props<span class="token punctuation">,</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> instance<span class="token punctuation">.</span>vnode
        <span class="token comment">// \u5224\u65AD\u662F\u5426\u662F\u72B6\u6001\u7EC4\u4EF6</span>
        <span class="token keyword">const</span> isStateful <span class="token operator">=</span> instance<span class="token punctuation">.</span>vnode<span class="token punctuation">.</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">STATEFUL_COMPONENT</span>
        instance<span class="token punctuation">.</span>props <span class="token operator">=</span> props
        <span class="token keyword">const</span> setupResult <span class="token operator">=</span> isStateful
            <span class="token operator">?</span> <span class="token function">setupStatefulComponent</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span>
            <span class="token operator">:</span> <span class="token keyword">undefined</span>

        <span class="token keyword">return</span> setupResult
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">setupStatefulComponent</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> Component <span class="token operator">=</span> instance<span class="token punctuation">.</span>type
        <span class="token keyword">const</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token operator">=</span> Component
        <span class="token comment">// \u5B9A\u4E49 render \u4E2D\u7528\u7684 proxy</span>
        instance<span class="token punctuation">.</span>proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> PublicInstanceProxyHandlers<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>setup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5B9A\u4E49\u4E0A\u4E0B\u6587\u4F20\u7ED9 setup</span>
            <span class="token keyword">const</span> setupContext <span class="token operator">=</span> instance<span class="token punctuation">.</span>setupContext <span class="token operator">=</span> <span class="token function">createSetupContext</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span>
            <span class="token function">pauseTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">const</span> setupResult <span class="token operator">=</span> <span class="token function">setup</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>props<span class="token punctuation">,</span> setupContext<span class="token punctuation">)</span>
            <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment">// \u53EF\u80FD\u8FD4\u56DE\u72B6\u6001\u6216\u8005\u6E32\u67D3\u51FD\u6570</span>
            <span class="token function">handleSetupResult</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> setupResult<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5B9A\u4E49 proxy \u4F20\u7ED9 render</span>
            <span class="token function">finishComponentSetup</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createSetupContext</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">expose</span> <span class="token operator">=</span> <span class="token parameter">exposed</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        instance<span class="token punctuation">.</span>exposed <span class="token operator">=</span> exposed <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token function">attrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> attrs <span class="token operator">||</span> <span class="token punctuation">(</span>attrs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>attrs<span class="token punctuation">,</span> <span class="token punctuation">{</span> 
                <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">track</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> <span class="token string">&#39;$attrs&#39;</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        slots<span class="token operator">:</span> instance<span class="token punctuation">.</span>slots<span class="token punctuation">,</span>
        emit<span class="token operator">:</span> instance<span class="token punctuation">.</span>emit<span class="token punctuation">,</span>
        expose
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">handleSetupResult</span><span class="token punctuation">(</span><span class="token parameter">instance<span class="token punctuation">,</span> setupResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>setupResult<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// setup \u8FD4\u56DE\u51FD\u6570\uFF0C\u8D4B\u7ED9 instance.render</span>
        instance<span class="token punctuation">.</span>render <span class="token operator">=</span> setupResult
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>setupResult<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// setup \u8FD4\u56DE\u5BF9\u8C61\uFF0C\u8BF4\u660E\u662F\u72B6\u6001</span>
        instance<span class="token punctuation">.</span>setupState <span class="token operator">=</span> setupResult
    <span class="token punctuation">}</span>
    <span class="token function">finishComponentSetup</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">finishComponentSetup</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> Component <span class="token operator">=</span> instance<span class="token punctuation">.</span>type
    <span class="token comment">// setup \u8FD4\u56DE\u72B6\u6001\u65F6\uFF0C\u91C7\u7528\u7528\u6237\u5B9A\u4E49\u7684 render \u51FD\u6570 </span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">.</span>render<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        instance<span class="token punctuation">.</span>render <span class="token operator">=</span> Component<span class="token punctuation">.</span>render <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br></div></div><h3 id="_5-1-\u6267\u884C-instance-render" tabindex="-1"><a class="header-anchor" href="#_5-1-\u6267\u884C-instance-render" aria-hidden="true">#</a> 5.1 \u6267\u884C instance.render</h3><p>\u73B0\u5728\u6211\u4EEC\u6709\u4E86\u7EC4\u4EF6\u5B9E\u4F8B\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7 <code>instance.render</code> \u5F00\u59CB\u6302\u8F7D\u6D41\u7A0B</p><p>\u5728 setupRenderEffect \u4E2D\uFF0C\u6267\u884C <code>instance.render</code> \u5F97\u5230\u5B50\u6811\uFF0C\u5047\u8BBE\u6B64\u65F6\u5728 render \u5185\u8FD4\u56DE h \u51FD\u6570\u521B\u5EFA\u7684\u5143\u7D20\u8282\u70B9 <code>h(&#39;div&#39;, { style: {color: &#39;red&#39;}}, &#39;hello&#39;)</code> \u540E\u6587\u7528 ele \u6307\u4EE3\u5B83</p><ul><li>\u5728 patch \u4E2D\u7528 processElement \u5904\u7406\u5143\u7D20\u8282\u70B9\uFF1A <ul><li>\u5982\u679C ele \u6709\u5B50\u8282\u70B9\u5C31\u5148\u6302\u8F7D\u5B50\u8282\u70B9</li><li>\u8BBE\u7F6E\u5143\u7D20\u7684\u5C5E\u6027</li><li>\u5C06\u5143\u7D20\u63D2\u5165\u7236\u8282\u70B9\uFF08container\uFF09\u4E2D</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Text <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> child <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> child
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// string and number</span>
        <span class="token keyword">return</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>Text<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token function">String</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createRender</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// other code</span>
    <span class="token keyword">const</span> <span class="token function-variable function">mountChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">children<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            child <span class="token operator">=</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
            <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> child<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">processElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u521B\u5EFA\u5143\u7D20</span>
            <span class="token keyword">let</span> el
            <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> props<span class="token punctuation">,</span> shapeFlag <span class="token punctuation">}</span> <span class="token operator">=</span> n2
            el <span class="token operator">=</span> n2<span class="token punctuation">.</span>el <span class="token operator">=</span> <span class="token function">hostCreateElement</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
            <span class="token comment">// \u6302\u8F7D\u5B50\u8282\u70B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">TEXT_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">hostSetElementText</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">mountChildren</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>children<span class="token punctuation">,</span> el<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u8BBE\u7F6E\u5C5E\u6027</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!==</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">hostPatchProp</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u63D2\u5165</span>
            <span class="token function">hostInsert</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u66F4\u65B0</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">processText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">hostInsert</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>el <span class="token operator">=</span> <span class="token function">hostCreateText</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                container<span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
           <span class="token comment">// \u66F4\u65B0</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">patch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">===</span> n2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> shapeFlag <span class="token punctuation">}</span> <span class="token operator">=</span> n2
        <span class="token keyword">switch</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> Text<span class="token operator">:</span>
                <span class="token function">processText</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
                <span class="token keyword">break</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ELEMENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// type \u662F\u5143\u7D20</span>
                    <span class="token function">processElement</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">COMPONENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// type \u662F\u7EC4\u4EF6</span>
                    <span class="token function">processComponent</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">setupRenderEffect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">instance<span class="token punctuation">,</span> initialVNode<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token function-variable function">componentUpdateFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">.</span>isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> <span class="token punctuation">{</span> el<span class="token punctuation">,</span> props <span class="token punctuation">}</span> <span class="token operator">=</span> initialVNode
                <span class="token keyword">const</span> proxyToUse <span class="token operator">=</span> instance<span class="token punctuation">.</span>proxy
                <span class="token comment">// \u6267\u884C render \u83B7\u5F97\u5B50\u6811</span>
                <span class="token keyword">const</span> subTree <span class="token operator">=</span> 
                    <span class="token punctuation">(</span>instance<span class="token punctuation">.</span>subTree <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>proxyToUse<span class="token punctuation">,</span> proxyToUse<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> subTree<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
                initialVNode<span class="token punctuation">.</span>el <span class="token operator">=</span> subTree<span class="token punctuation">.</span>el
                instance<span class="token punctuation">.</span>isMounted <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u66F4\u65B0</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// render \u9700\u8981\u54CD\u5E94\u5C5E\u6027\u6216\u72B6\u6001\u7684\u53D8\u5316</span>
        <span class="token keyword">const</span> update <span class="token operator">=</span> instance<span class="token punctuation">.</span>update <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>componentUpdateFn<span class="token punctuation">)</span>
        update<span class="token punctuation">.</span>id <span class="token operator">=</span> instance<span class="token punctuation">.</span>uid <span class="token comment">// \u540E\u9762\u66F4\u65B0\u65F6\u7528\u5230</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br></div></div><p>\u6CE8\u610F\u5F53 children \u662F\u6570\u7EC4\uFF08 <code>[&#39;hello&#39;, &#39;word&#39;]</code> \uFF09\u65F6\uFF0C\u5982\u679C\u5C06\u6BCF\u4E2A\u5B50\u5143\u7D20\u90FD\u5F53\u4F5C TEXT_CHILDREN \u5904\u7406\uFF0C\u5219\u540E\u6DFB\u52A0\u7684 <code>&#39;word&#39;</code> \u5C31\u4F1A\u8986\u76D6\u4E4B\u524D\u7684 <code>&#39;hello&#39;</code>\uFF0C\u6240\u4EE5\uFF0C\u5728\u6B64\u5904\u521B\u5EFA\u4E00\u4E2A\u865A\u62DF\u7684 Text \u8282\u70B9\uFF0C\u5C06\u5B50\u5143\u7D20\u4F5C\u4E3A\u865A\u62DF\u8282\u70B9\u7684\u5B69\u5B50\u5904\u7406</p><h2 id="_6-\u66F4\u65B0\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_6-\u66F4\u65B0\u6D41\u7A0B" aria-hidden="true">#</a> 6. \u66F4\u65B0\u6D41\u7A0B</h2><p>\u4E0A\u9762\u5C06 componentUpdateFn \u653E\u5165\u4E86 effect\uFF0C\u8FD9\u6837\u5F53\u7528\u6237\u63D0\u4F9B\u7684 render \u5185\u4F7F\u7528\u7684\u6570\u636E\u6539\u53D8\u65F6\uFF0C\u4F1A\u91CD\u65B0\u6267\u884C</p><h3 id="_6-1-\u51C6\u5907-\u53BB\u6389\u65E0\u610F\u4E49\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#_6-1-\u51C6\u5907-\u53BB\u6389\u65E0\u610F\u4E49\u66F4\u65B0" aria-hidden="true">#</a> 6.1 \u51C6\u5907\uFF0C\u53BB\u6389\u65E0\u610F\u4E49\u66F4\u65B0</h3><p>\u9996\u5148\u8003\u8651\uFF0C\u5982\u679C\u9891\u7E41\u66F4\u6539\u6570\u636E\uFF0CcomponentUpdateFn \u4F1A\u65E0\u610F\u4E49\u7684\u91CD\u590D\u591A\u6B21\u6267\u884C\uFF0C\u5B9E\u9645\u53EA\u9700\u8981\u6700\u540E\u4E00\u6B21\u7684\u6267\u884C\u5373\u53EF</p><p>\u53EF\u4EE5\u7528 Set \u5BF9 componentUpdateFn \u53BB\u91CD\uFF0C\u5728\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\u7EDF\u4E00\u6267\u884C\u6240\u6709\u6536\u96C6\u7684\u66F4\u65B0\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// example</span>
<span class="token comment">// const App = {</span>
<span class="token comment">//     setup() {</span>
<span class="token comment">//         const state = reactive({ name:&#39;zzz&#39; })</span>
<span class="token comment">//         setTimeout(() =&gt; {</span>
<span class="token comment">//             state.name = &#39;zxy&#39;</span>
<span class="token comment">//             state.name = &#39;xyz&#39;</span>
<span class="token comment">//             state.name = &#39;zzz&#39;</span>
<span class="token comment">//         }, 1000)</span>
<span class="token comment">//         return () =&gt; {</span>
<span class="token comment">//             // \u4F1A\u6267\u884C\u591A\u6B21</span>
<span class="token comment">//             console.log(state.name)</span>
<span class="token comment">//         }</span>
<span class="token comment">//     }</span>
<span class="token comment">// }</span>
<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> flushIndex <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">let</span> currentPreFlushParentJob <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">let</span> isFlushing <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> isFlushPending <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">const</span> <span class="token function-variable function">setupRenderEffect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">instance<span class="token punctuation">,</span> initialVNode<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// other code</span>
    instance<span class="token punctuation">.</span>update <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>componentUpdateFn<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        sheduler<span class="token operator">:</span> <span class="token function">queueJob</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>update<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">queueJob</span><span class="token punctuation">(</span><span class="token parameter">job</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span>
        <span class="token function">queueFlush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">queueFlush</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isFlushing <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isFlushPending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        isFlushPending <span class="token operator">=</span> <span class="token boolean">true</span>
        currentFlushPromise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>flushJobs<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">flushJobs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isFlushPending <span class="token operator">=</span> <span class="token boolean">false</span>
    isFlushing <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token comment">// parent.id &lt; child.id\uFF0C\u66F4\u65B0\u65F6\u8981\u5148\u66F4\u65B0 parent \u518D\u66F4\u65B0 child</span>
    queue<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>flushIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> flushIndex <span class="token operator">&lt;</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> flushIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> job <span class="token operator">=</span> queue<span class="token punctuation">[</span>flushIndex<span class="token punctuation">]</span>
            job <span class="token operator">&amp;&amp;</span> <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        flushIndex <span class="token operator">=</span> <span class="token number">0</span>
        queue<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
        isFlushing <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h3 id="_6-2-\u5143\u7D20\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#_6-2-\u5143\u7D20\u66F4\u65B0" aria-hidden="true">#</a> 6.2 \u5143\u7D20\u66F4\u65B0</h3><p>\u66F4\u65B0\u7684\u6D41\u7A0B\u5C31\u662F\u518D\u6B21\u8C03\u7528 instance.render \u5F97\u5230\u65B0\u7684\u6811\uFF0C\u901A\u8FC7 patch \u65B0\u8001\u4E24\u9897\u6811\uFF0C\u5B8C\u6210\u66F4\u65B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">componentUpdateFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">.</span>isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// other code</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> proxyToUse <span class="token operator">=</span> instance<span class="token punctuation">.</span>proxy
        <span class="token keyword">const</span> nextTree <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>proxyToUse<span class="token punctuation">,</span> proxyToUse<span class="token punctuation">)</span>
        <span class="token keyword">const</span> prevTree <span class="token operator">=</span> instance<span class="token punctuation">.</span>subTree
        instance<span class="token punctuation">.</span>subTree <span class="token operator">=</span> nextTree
        <span class="token function">patch</span><span class="token punctuation">(</span>prevTree<span class="token punctuation">,</span> nextTree<span class="token punctuation">,</span> <span class="token function">hostParentNode</span><span class="token punctuation">(</span>prevTree<span class="token punctuation">.</span>el<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">patch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// other code</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u662F\u540C\u4E00\u7C7B\u578B\uFF0C\u5220\u9664\u65E7\u8282\u70B9\uFF0C\u6302\u8F7D\u65B0\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">&amp;&amp;</span> n1<span class="token punctuation">.</span>type <span class="token operator">!==</span> n2<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F97\u5230\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
        anchor <span class="token operator">=</span> <span class="token function">hostNextSibling</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
        <span class="token comment">// \u5220\u9664\u65E7\u8282\u70B9</span>
        <span class="token function">hostRemove</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
        n1 <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// other code</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5F53\u5BF9\u5143\u7D20\u8FDB\u884C\u66F4\u65B0\u65F6\uFF0C\u9700\u8981\u66F4\u65B0\u5B83\u7684\u5C5E\u6027\u548C\u513F\u5B50\uFF0C\u8FD9\u91CC\u7B80\u5316\u4E0B\u5C5E\u6027\u66F4\u65B0\uFF0C\u76F4\u63A5\u5220\u9664\u8001\u5C5E\u6027\u4E2D\u4E0D\u5B58\u5728\u7684\u65B0\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">patchProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> oldProps<span class="token punctuation">,</span> newProps</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldProps <span class="token operator">!==</span> newProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> newProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> next <span class="token operator">=</span> newProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token keyword">const</span> prev <span class="token operator">=</span> oldProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">!==</span> prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">hostPatchProp</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> oldProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> newProps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">hostPatchProp</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> oldProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">processElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// other code</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>el <span class="token operator">=</span> n1<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
        <span class="token keyword">const</span> oldProps <span class="token operator">=</span> n1<span class="token punctuation">.</span>props
        <span class="token keyword">const</span> newProps <span class="token operator">=</span> n2<span class="token punctuation">.</span>props
        <span class="token function">patchChildren</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> el<span class="token punctuation">)</span>
        <span class="token function">patchProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> oldProps<span class="token punctuation">,</span> newProps<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ul><li><p>\u5BF9\u4E8E\u5B69\u5B50\u7684\u66F4\u65B0\uFF0Cchildren \u6709 3 \u79CD\u7C7B\u578B\uFF0C\u5206\u522B\u662F text\u3001array \u6216\u8005\u6CA1\u6709\uFF08null\uFF09\uFF0C\u7528 oldChildren \u4EE3\u8868\u8001\u7684\u5B69\u5B50\uFF0CnewChildren \u4EE3\u8868\u65B0\u7684\u5B69\u5B50</p><ol><li><p>newChildren \u662F text\uFF0C\u90A3\u4E48\u8BBE\u7F6E parent \u7684 textContent \u4E3A newChildren \u5373\u53EF</p></li><li><p>\u5982\u679C oldChildren \u4E0D\u662F array\uFF0C\u6302\u8F7D newChildren \u5230 parent \u5373\u53EF</p></li><li><p>\u5982\u679C newChildren \u548C oldChildren \u90FD\u662F array\uFF0C\u8BF4\u660E\u6709\u8282\u70B9\u7684\u590D\u7528\u548C\u79FB\u4F4D\uFF0C\u9700\u8981\u8FDB\u884C diff \u6BD4\u8F83</p></li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">patchChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> c1 <span class="token operator">=</span> n1<span class="token punctuation">.</span>children
        <span class="token keyword">const</span> prevShapeFlag <span class="token operator">=</span> n1 <span class="token operator">?</span> n1<span class="token punctuation">.</span>shapeFlag <span class="token operator">:</span> <span class="token number">0</span>
        <span class="token keyword">const</span> c2 <span class="token operator">=</span> n2<span class="token punctuation">.</span>children
        <span class="token keyword">const</span> <span class="token punctuation">{</span> shapeFlag <span class="token punctuation">}</span> <span class="token operator">=</span> n2
        <span class="token comment">// children \u7684 3 \u79CD\u60C5\u51B5\uFF0CtextChildren\u3001arrayChildren\u3001no-children</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">TEXT_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c2 <span class="token operator">!==</span> c1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">hostSetElementText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> c2<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>prevShapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// diff</span>
                    <span class="token function">patchKeyedChildren</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u6CA1\u6709\u65B0\u5B50\u8282\u70B9\uFF0C\u5220\u9664\u8001\u7684\u5B50\u8282\u70B9</span>
                    children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token comment">// TODO: \u6682\u65F6\u53EA\u5904\u7406\u5143\u7D20\u60C5\u51B5</span>
                        <span class="token function">hostRemove</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E0A\u4E00\u4E2A children \u662F text \u6216\u8005 null</span>
                <span class="token comment">// \u65B0 children \u662F array \u6216 null</span>
                <span class="token comment">// \u6302\u8F7D\u65B0 children</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>prevShapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">TEXT_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">hostSetElementText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">mountChildren</span><span class="token punctuation">(</span>c2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h4 id="_6-2-1-diff" tabindex="-1"><a class="header-anchor" href="#_6-2-1-diff" aria-hidden="true">#</a> 6.2.1. diff</h4><ul><li><p>\u7B56\u7565\u662F\u5C3D\u53EF\u80FD\u67E5\u627E\u53EF\u4EE5\u590D\u7528\u7684\u8282\u70B9\uFF1A</p><ol><li><p>\u4ECE\u4E24\u7AEF\u627E\u76F8\u540C\u8282\u70B9\uFF0C\u8FDB\u884C\u590D\u7528\uFF08\u66F4\u65B0\u5C5E\u6027\u3001\u5B69\u5B50\u7B49\u64CD\u4F5C\uFF09</p></li><li><p>\u627E\u5B8C\u540E\u5982\u679C oldChildren \u6709\u5269\u4F59\uFF0C\u9700\u8981\u5220\u9664\uFF1B\u5426\u5219 newChildren \u6709\u5269\u4F59\uFF0C\u9700\u8981\u6302\u8F7D</p></li><li><p>\u5269\u4E0B\u7684\u8282\u70B9\u5BF9\u5E94\u4F4D\u7F6E\u7684\u5143\u7D20\u4E0D\u5168\u76F8\u540C\uFF0C\u8BF4\u660E\u53D1\u751F\u4E86\u4F4D\u7F6E\u79FB\u52A8\u6216\u8005\u5143\u7D20\u66FF\u6362\uFF0C\u7528 toBePatched \u4EE3\u8868\u9700\u8981\u64CD\u4F5C\u7684\u8282\u70B9\u4E2A\u6570</p><ul><li><p>\u9996\u5148\u627E\u5230 oldChildren \u548C newChildren \u76F8\u540C\u7684\u8282\u70B9\u8FDB\u884C\u590D\u7528</p><ul><li>newIndexToOldIndexMap[i] = x \u5F53 x !== 0 \u65F6\u8868\u793A newChildren \u4E2D\u7B2C i \u4F4D\u8282\u70B9\u5728 oldChildren \u4E2D\u7684\u5E8F\u53F7\u662F x</li><li>\u5F53 x === 0 \u65F6\uFF0C\u8868\u793A newChildren \u4E2D\u7B2C i \u4F4D\u51E0\u70B9\u672A\u590D\u7528\u8FC7</li></ul></li><li><p>\u6839\u636E toBePatched \u4ECE\u540E\u5F80\u524D\u67E5\u627E newChildren</p><ul><li>\u5982\u679C\u662F\u672A\u590D\u7528\u7684\u8282\u70B9\uFF0C\u8BF4\u660E\u662F\u65B0\u589E\u7684\u8282\u70B9\uFF0C\u76F4\u63A5\u63D2\u5165\u5373\u53EF</li><li>\u5982\u679C\u662F\u590D\u7528\u8FC7\u7684\u8282\u70B9 nodeI\uFF0C\u5C1D\u8BD5\u5F97\u5230 newIndexToOldIndexMap \u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u6240\u6709\u5E8F\u53F7\u6784\u6210\u7684\u6570\u7EC4 increaseArr\uFF0C\u7531\u4E8E\u662F\u4ECE\u540E\u5F80\u524D\u67E5\u627E\uFF0C\u5982\u679C nodeI \u5BF9\u5E94\u7684\u5E8F\u53F7\u5728 increaseArr \u4E2D\uFF0C\u8BF4\u660E\u8DF3\u8FC7\u5B83\u5373\u53EF\uFF0C\u5426\u5219\uFF0C\u9700\u8981\u63D2\u5165\u5B83</li></ul></li></ul></li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">patchKeyedChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">const</span> l2 <span class="token operator">=</span> c2<span class="token punctuation">.</span>length
        <span class="token keyword">let</span> e1 <span class="token operator">=</span> c1<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// prev ending index</span>
        <span class="token keyword">let</span> e2 <span class="token operator">=</span> l2 <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// next ending index</span>

        <span class="token comment">// \u4ECE\u5934\u6BD4\u8F83</span>
        <span class="token comment">// (a b)</span>
        <span class="token comment">// (a b) c</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1 <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> n1 <span class="token operator">=</span> c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">const</span> n2 <span class="token operator">=</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n1<span class="token punctuation">.</span>type <span class="token operator">===</span> n2<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">patch</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span>
            <span class="token punctuation">}</span>
            i<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4ECE\u5C3E\u6BD4\u8F83</span>
        <span class="token comment">//   (a b)</span>
        <span class="token comment">// c (a b)</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1 <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> n1 <span class="token operator">=</span> c1<span class="token punctuation">[</span>e1<span class="token punctuation">]</span>
            <span class="token keyword">const</span> n2 <span class="token operator">=</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>e2<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n1<span class="token punctuation">.</span>type <span class="token operator">===</span> n2<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">patch</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span>
            <span class="token punctuation">}</span>
            e1<span class="token operator">--</span>
            e2<span class="token operator">--</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// (a b)</span>
        <span class="token comment">// (a b) c</span>
        <span class="token comment">// i = 2, e1 = 1, e2 = 2</span>
        <span class="token comment">// or</span>
        <span class="token comment">//   (a b)</span>
        <span class="token comment">// c (a b)</span>
        <span class="token comment">// i = 0, e1 = -1, e2 = 0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> nextPos <span class="token operator">=</span> e2 <span class="token operator">+</span> <span class="token number">1</span>
                <span class="token keyword">const</span> anchor <span class="token operator">=</span> nextPos <span class="token operator">&lt;</span> l2 <span class="token operator">?</span> c2<span class="token punctuation">[</span>nextPos<span class="token punctuation">]</span><span class="token punctuation">.</span>el <span class="token operator">:</span> <span class="token keyword">null</span>
                <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
                    i<span class="token operator">++</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// (a b) c</span>
        <span class="token comment">// (a b)</span>
        <span class="token comment">// i = 2, e1 = 2, e2 = 1</span>
        <span class="token comment">// or</span>
        <span class="token comment">// a (b c)</span>
        <span class="token comment">//   (b c)</span>
        <span class="token comment">// i = 0, e1 = 0, e2 = 1</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">hostRemove</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
                i<span class="token operator">++</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> s1 <span class="token operator">=</span> i
            <span class="token keyword">const</span> s2 <span class="token operator">=</span> i
            <span class="token keyword">const</span> keyToNewIndexMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> s2<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> nextChild <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    keyToNewIndexMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">let</span> j
            <span class="token keyword">let</span> patched <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">const</span> toBePatched <span class="token operator">=</span> e2 <span class="token operator">-</span> s2 <span class="token operator">+</span> <span class="token number">1</span>
            <span class="token keyword">let</span> moved <span class="token operator">=</span> <span class="token boolean">false</span>
            <span class="token keyword">let</span> maxNewIndexSoFar <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">const</span> newIndexToOldIndexMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>toBePatched<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> s1<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> e1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> prevChild <span class="token operator">=</span> c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>patched <span class="token operator">&gt;=</span> toBePatched<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">hostRemove</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">)</span>
                    <span class="token keyword">continue</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">let</span> newIndex
                <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> s2<span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> e2<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>
                        newIndexToOldIndexMap<span class="token punctuation">[</span>j <span class="token operator">-</span> s2<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> prevChild<span class="token punctuation">.</span>type <span class="token operator">===</span> c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>type
                    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        newIndex <span class="token operator">=</span> j
                        <span class="token keyword">break</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">hostRemove</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    newIndexToOldIndexMap<span class="token punctuation">[</span>newIndex <span class="token operator">-</span> s2<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">&gt;=</span> maxNewIndexSoFar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        maxNewIndexSoFar <span class="token operator">=</span> newIndex
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        moved <span class="token operator">=</span> <span class="token boolean">true</span>
                    <span class="token punctuation">}</span>
                    <span class="token function">patch</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">,</span> c2<span class="token punctuation">[</span>newIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    patched<span class="token operator">++</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            
            <span class="token keyword">const</span> increasingNewIndexSequence <span class="token operator">=</span> moved
                <span class="token operator">?</span> <span class="token function">getSequence</span><span class="token punctuation">(</span>newIndexToOldIndexMap<span class="token punctuation">)</span>
                <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            j <span class="token operator">=</span> increasingNewIndexSequence<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> toBePatched <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> newIndex <span class="token operator">=</span> s2 <span class="token operator">+</span> i
                <span class="token keyword">const</span> nextChild <span class="token operator">=</span> c2<span class="token punctuation">[</span>newIndex<span class="token punctuation">]</span>
                <span class="token keyword">const</span> anchor <span class="token operator">=</span> newIndex <span class="token operator">&lt;</span> l2 <span class="token operator">?</span> c2<span class="token punctuation">[</span>newIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>el <span class="token operator">:</span> <span class="token keyword">null</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndexToOldIndexMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> nextChild<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>moved<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">!==</span> increasingNewIndexSequence<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">hostInsert</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        j<span class="token operator">--</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br></div></div><h4 id="_6-2-2-\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_6-2-2-\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 6.2.2. \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217</h4><p>LIS \u4EE3\u8868\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6</p><ul><li><p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4 a = [..., x-1, x, x+1, ...]\uFF0C\u8FD9\u91CC\u6709\u4E24\u79CD\u65B9\u6CD5\uFF1A</p><ol><li><p>\u5047\u8BBE a \u662F\u4E00\u4E2A\u5012\u5E8F\u6570\u7EC4\uFF0C\u90A3\u4E48 LIS = 1\uFF0C\u6784\u5EFA\u4E00\u4E2A\u6570\u7EC4 dp \u5E76\u586B\u5145 1\uFF0C\u5176\u4E2D dp[i] \u8868\u793A a \u4E2D\u7B2C i \u4F4D\u7ED3\u5C3E\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u957F\u5EA6</p><ul><li>dp \u6EE1\u8DB3 dp[i] = Max(dp[j]) + 1\uFF080 &lt;= j &lt; i\uFF09\uFF0C\u5373\u60F3\u8981 a[i] \u7ED3\u5C3E\u7684\u6700\u957F\u5B50\u5E8F\u5217\uFF0C\u53EA\u9700\u8981\u5B83\u524D\u9762\u6240\u6709 dp \u4E2D\u6700\u5927\u7684\u503C\u52A0\u4E00\u5373\u53EF</li></ul></li><li><p>dp[len] = m \u8868\u793A LIS \u4E3A len \u7684\u5E8F\u5217\u7ED3\u5C3E\u6570\u5B57\u662F m\uFF0C\u8BBE\u521D\u59CB len = 1\u3001dp[1] = a[0]</p><ul><li>\u4ECE i = 1 \u5411\u540E\u904D\u5386 a\uFF0C\u5982\u679C a[i - 1] &lt; a[i]\uFF0C\u90A3\u4E48 len \u52A0\u4E00\u5373\u53EF</li><li>\u5982\u679C a[i - 1] &gt; a[i]\uFF0C\u90A3\u4E48\u5728 dp \u6570\u7EC4\u4E2D\u627E\u5230\u552F\u4E00\u4E00\u4E2A\u5C0F\u4E8E a[i] \u7684\u6570\u7D22\u5F15\u4E3A index\uFF0C\u4EE4 dp[index + 1] = a[i]</li></ul></li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u7EBF\u6027\u89C4\u5212</span>
<span class="token comment">// function getSequence(arr) {</span>
    <span class="token comment">// const dp = []</span>
    <span class="token comment">// const len = arr.length</span>
    <span class="token comment">// const result = []</span>
    <span class="token comment">// for (let i = 0; i &lt; len; i++) {</span>
    <span class="token comment">//     dp[i] = 1</span>
    <span class="token comment">//     const currentRes = []</span>
    <span class="token comment">//     const current = arr[i]</span>
    <span class="token comment">//     for (let j = 0; j &lt; i; j++) {</span>
    <span class="token comment">//         const compare = arr[j]</span>
    <span class="token comment">//         if (compare &gt;= current) {</span>
    <span class="token comment">//             continue</span>
    <span class="token comment">//         }</span>
    <span class="token comment">//         const dpJ = dp[j]</span>
    <span class="token comment">//         if (1 + dpJ &gt; dp[i]) {</span>
    <span class="token comment">//             currentRes.push(j)</span>
    <span class="token comment">//             dp[i] = 1 + dpJ</span>
    <span class="token comment">//         }</span>
    <span class="token comment">//     }</span>
    <span class="token comment">//     currentRes.push(i)</span>
    <span class="token comment">//     result.push(currentRes)</span>
    <span class="token comment">// }</span>
    <span class="token comment">// let maxLen = 0</span>
    <span class="token comment">// let final = null</span>
    <span class="token comment">// result.forEach(arr =&gt; {</span>
    <span class="token comment">//     const len = arr.length</span>
    <span class="token comment">//     if (len &gt; maxLen) {</span>
    <span class="token comment">//         final = arr</span>
    <span class="token comment">//         maxLen = len</span>
    <span class="token comment">//     }</span>
    <span class="token comment">// })</span>
    <span class="token comment">// return final</span>
<span class="token comment">//  }</span>
<span class="token comment">// 2. \u8D2A\u5FC3 + \u4E8C\u5206</span>
    <span class="token keyword">function</span> <span class="token function">getSequence</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        dp<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> current <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">&gt;</span> dp<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                dp<span class="token punctuation">[</span><span class="token operator">++</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> current
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> r <span class="token operator">=</span> len<span class="token punctuation">,</span> pos <span class="token operator">=</span> <span class="token number">0</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        pos <span class="token operator">=</span> mid
                        l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                dp<span class="token punctuation">[</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> current
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h3 id="_6-3-\u7EC4\u4EF6\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#_6-3-\u7EC4\u4EF6\u66F4\u65B0" aria-hidden="true">#</a> 6.3 \u7EC4\u4EF6\u66F4\u65B0</h3><p>\u5BF9\u4E8E\u7EC4\u4EF6\u66F4\u65B0\uFF0C\u5982\u679C\u7236\u7EC4\u4EF6\u4F20\u9012\u5C5E\u6027\u7ED9\u5B50\u7EC4\u4EF6\uFF0C\u5F53\u5C5E\u6027\u6539\u53D8\u65F6\uFF0C\u9700\u8981\u8BA9\u5B50\u7EC4\u4EF6\u66F4\u65B0\uFF0C\u5982\u679C\u5B50\u7EC4\u4EF6\u7684 render \u51FD\u6570\u4E2D\u4F7F\u7528\u4E86\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u5219\u5B50\u7EC4\u4EF6\u4F1A\u518D\u6B21\u66F4\u65B0\uFF0C\u6240\u4EE5\u9700\u8981\u5728\u53EF\u4EE5\u66F4\u65B0\u65F6\uFF08shouldUpdateComponent \u8FD4\u56DE true\uFF09\uFF0C\u53BB\u9664\u91CD\u590D\u66F4\u65B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">processText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// other code</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>el <span class="token operator">=</span> n1<span class="token punctuation">.</span>el<span class="token operator">!</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>children <span class="token operator">!==</span> n1<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">hostSetText</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">shouldUpdateComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">preVnode<span class="token punctuation">,</span> nextVnode</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> props<span class="token operator">:</span> prevProps<span class="token punctuation">,</span> children<span class="token operator">:</span> prevChildren <span class="token punctuation">}</span> <span class="token operator">=</span> prevVNode
    <span class="token keyword">const</span> <span class="token punctuation">{</span> props<span class="token operator">:</span> nextProps<span class="token punctuation">,</span> children<span class="token operator">:</span> nextChildren<span class="token punctuation">}</span> <span class="token operator">=</span> nextVNode
    <span class="token keyword">if</span> <span class="token punctuation">(</span>preChildren <span class="token operator">||</span> nextChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nextChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevProps <span class="token operator">===</span> nextProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>prevProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>nextProps
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nextProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> nextKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nextKeys<span class="token punctuation">.</span>length <span class="token operator">!==</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>prevProps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> nextKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> nextKeys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prevProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> nextProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">invalidateJob</span><span class="token punctuation">(</span><span class="token parameter">job</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> flushIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C1A\u672A\u5904\u7406\u5230 job\uFF0C\u5220\u9664 job\uFF0C\u56E0\u4E3A\u540E\u7EED\u6211\u4EEC\u4F1A\u624B\u52A8\u8C03\u7528</span>
        queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">updateComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u62FF\u5230\u7EC4\u4EF6\u5B9E\u4F8B</span>
    <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>component <span class="token operator">=</span> n1<span class="token punctuation">.</span>component<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldUpdateComponent</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO: Watch \u5F85\u5904\u7406</span>
        instance<span class="token punctuation">.</span>next <span class="token operator">=</span> n2
        <span class="token comment">// \u53BB\u6389\u91CD\u590D\u7684\u66F4\u65B0</span>
        <span class="token function">invalidateJob</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>update<span class="token punctuation">)</span>
        instance<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u9700\u8981\u66F4\u65B0\uFF0C\u76F4\u63A5\u590D\u5236</span>
        n2<span class="token punctuation">.</span>el <span class="token operator">=</span> n1<span class="token punctuation">.</span>el
        instance<span class="token punctuation">.</span>vnode <span class="token operator">=</span> n2
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">processComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">mountComponent</span><span class="token punctuation">(</span>n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">updateComponent</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div>`,54);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
