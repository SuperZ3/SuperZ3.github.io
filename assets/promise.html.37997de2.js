import{r as p,o as t,a as e,b as n,d as o,F as c,e as s,c as l}from"./app.9dca4400.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";var r="/assets/equal.c13345a6.png";const i={},k=n("h1",{id:"promise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#promise","aria-hidden":"true"},"#"),s(" Promise")],-1),b=s("Promise \u88AB\u8BBE\u8BA1\u7528\u6765\u6267\u884C\u5F02\u6B65\u4EFB\u52A1\uFF0C\u907F\u514D\u56DE\u8C03\u5730\u72F1\u7684\u4EA7\u751F\u3002"),m={href:"https://promisesaplus.com/",target:"_blank",rel:"noopener noreferrer"},d=s("Promise/A+"),f=s(" \u89C4\u8303\u88AB\u5E7F\u6CDB\u91C7\u7528\u6765\u5B9E\u73B0 Promise\uFF0C\u501F\u52A9 "),y=n("code",null,"promises-aplus-test",-1),w=s(" \u53EF\u4EE5\u6D4B\u8BD5\u80FD\u5426\u5168\u90E8\u901A\u8FC7\u89C4\u8303"),h=l(`<h2 id="\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u72B6\u6001" aria-hidden="true">#</a> \u72B6\u6001</h2><p>Promise \u6709\u4E09\u79CD\u72B6\u6001\uFF08pending\u3001fulfilled\u3001rejected\uFF09\uFF0Cpending \u53EF\u4EE5\u8F6C\u5316\u6210 fulfilled \u6216 rejected\uFF0C\u4F46 fulfilled \u548C rejected \u4E0D\u53EF\u8F6C\u5316\u6210\u5176\u5B83\u72B6\u6001\uFF0C\u5E76\u4E14\u5728\u8FD9\u4E24\u79CD\u72B6\u6001\u4E2D\u5FC5\u987B\u6709\u4E00\u4E2A\u503C\uFF08value\uFF09\u6216\u539F\u56E0\uFF08reason\uFF09\u3002</p><p>\u5F53\u6211\u4EEC new Promise \u65F6\u4F1A\u4F20\u5165\u4E00\u4E2A excutor\uFF0C\u63A5\u6536 resolve\u3001rejected \u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5E76\u7ACB\u5373\u6267\u884C excutor \u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u5199\u51FA\u5982\u4E0B\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Pending <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Fulfilled <span class="token operator">=</span> <span class="token string">&#39;fullfield&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Rejected <span class="token operator">=</span> <span class="token string">&#39;reject&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Mpromise</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">excutor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> Pending<span class="token punctuation">;</span>
        <span class="token comment">// \u5B58\u50A8\u6210\u529F\u7684\u503C</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5B58\u50A8\u5931\u8D25\u7684\u539F\u56E0</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5B58\u50A8\u6210\u529F\u56DE\u8C03</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fulfilledQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5B58\u50A8\u5931\u8D25\u56DE\u8C03</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>rejectedQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">excutor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">_resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> Pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> Fulfilled<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token comment">// \u6539\u53D8promise\u72B6\u6001\uFF0C\u5E76\u6267\u884C\u6240\u6709\u56DE\u8C03\u51FD\u6570</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>fulfilledQueue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">_reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> Pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> Rejected<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>

            <span class="token keyword">this</span><span class="token punctuation">.</span>rejectedQueue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="then-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#then-\u65B9\u6CD5" aria-hidden="true">#</a> then \u65B9\u6CD5</h2><p>Promise \u5FC5\u987B\u63D0\u4F9B\u4E00\u4E2A then \u65B9\u6CD5\u63A5\u6536 Promise \u72B6\u6001\u6539\u53D8\u540E\u8FD4\u56DE\u7684\u503C\uFF08value\uFF09\u6216\u539F\u56E0\uFF08reason\uFF09\uFF0C \u63A5\u53D7\u4E24\u4E2A\u51FD\u6570\u53C2\u6570\uFF08onFulfilled\uFF0ConRejected\uFF09\uFF0C\u8FD9\u4E24\u4E2A\u53C2\u6570\u6709\u5982\u4E0B\u8981\u6C42\uFF1A</p><ul><li><p>\u5FC5\u987B\u90FD\u662F\u53EF\u9009\u7684\u51FD\u6570\uFF0C\u5426\u5219\u5FFD\u7565</p></li><li><p>\u5FC5\u987B\u5728 Promise \u72B6\u6001\u6539\u53D8\u540E\u624D\u6267\u884C\uFF0C\u4E14\u53EA\u6267\u884C\u4E00\u6B21</p></li><li><p>\u5FC5\u987B\u5728\u5F53\u524D\u6267\u884C\u4E0A\u4E0B\u6587\uFF08execution context\uFF09\u4E2D\u4EE3\u7801\u6267\u884C\u5B8C\u6BD5\u540E\u6267\u884C\uFF0C\u8FD9\u610F\u5473\u7740\u6240\u6709\u540C\u6B65\u4EE3\u7801\u6267\u884C\u5B8C\u624D\u6267\u884C then \u6CE8\u518C\u7684\u4EE3\u7801\uFF0C\u9700\u8981 Promise \u7EF4\u62A4\u4E00\u4E2A\u4EFB\u52A1\u961F\u5217\uFF08task-scheduling queue\uFF09\u3002\u8FD9\u4E5F\u5C31\u4FDD\u8BC1\u4E86 then \u6CE8\u518C\u7684\u56DE\u8C03\u51FD\u6570\u7684\u5F02\u6B65\u6027\u3002</p></li><li><p>\u5FC5\u987B\u4F5C\u4E3A\u51FD\u6570\u6267\u884C\uFF0Cthis \u6CA1\u6709\u503C</p></li></ul><p>then \u51FD\u6570\u9700\u8981\u6EE1\u8DB3\u5982\u4E0B\u6761\u4EF6\uFF1A</p><ul><li>\u53EF\u80FD\u5BF9\u540C\u4E00\u4E2A Promise \u6267\u884C\u591A\u6B21\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6B64\u65F6\u5F53\u72B6\u6001\u53D8\u5316\u65F6\uFF0C\u9700\u8981\u6267\u884C\u6240\u6709\u6CE8\u518C\u7684 onFulfilled \u6216 onRejected</p><ul><li>\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A promise\uFF0C<code>promise2 = promise1.then(onFulfilled, onRejected)</code></li></ul><ul><li><p>\u5F53 onFulfilled \u6216 onRejected \u4E0D\u662F\u51FD\u6570\u65F6\uFF0C\u4E14 promise1 \u662F fulfilled \u6216 rejected \u65F6\uFF0Cpromise2 \u53D8\u4E3A\u5E26\u6709\u76F8\u5E94 value \u6216 reason \u7684\u72B6\u6001</p></li><li><p>\u82E5 onFulfilled \u6216 onRejected \u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF0Cpromise2 \u53D8\u4E3A\u5E26\u6709\u76F8\u5E94 reason \u7684 rejected \u72B6\u6001</p></li><li><p>\u82E5 onFulfilled \u6216 onRejected \u8FD4\u56DE\u4E00\u4E2A\u503C\uFF0C\u6267\u884C [[Resolve]](promise, x)</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Mpromise</span> <span class="token punctuation">{</span>
    <span class="token comment">// other code</span>
    <span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u672A\u4F20\u56DE\u8C03\u65F6\u5904\u7406</span>
        onFulfilled <span class="token operator">=</span> <span class="token keyword">typeof</span> onFulfilled <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onFulfilled</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">;</span>
        onRejected <span class="token operator">=</span> <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onRejected</span> <span class="token operator">:</span> <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> reason <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">// \u94FE\u5F0F\u5904\u7406 promise2 = promise1.then(onFulfilled,onRejected)</span>
        <span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mpromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> Fulfilled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// [[Resolve]](promise, x)</span>
                        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> Rejected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> Pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>fulfilledQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

                            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>

                <span class="token keyword">this</span><span class="token punctuation">.</span>rejectedQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>

                            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><p>\u6211\u4EEC\u4FEE\u6539\u540E\u7684\u4EE3\u7801\u5982\u4E0A\uFF0C\u7528 2 \u4E2A\u6570\u7EC4\u4FDD\u5B58 then \u6CE8\u518C\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8FD9\u6837\u5F53\u72B6\u6001\u6539\u53D8\u65F6\uFF0C\u5C31\u53EF\u4EE5\u5728\u76F8\u5E94\u7684\u6570\u7EC4\u91CC\u627E\u5230\u56DE\u8C03\u6267\u884C</p><p>\u6211\u4EEC\u7684 then \u51FD\u6570\u9700\u8981\u4F20\u9012 promise1 \u7684\u72B6\u6001\u5230\u8FD4\u56DE\u7684 promise2 \u4E2D\uFF0C\u56E0\u6B64\u5411\u6570\u7EC4\u4E2D\u63A8\u5165\u81EA\u5B9A\u4E49\u7684\u51FD\u6570\uFF0C\u6CE8\u610F\u6B64\u65F6\u5BF9\u4E8E then \u9700\u8981\u6EE1\u8DB3\u7684\u7B2C 2 \u6761\uFF0C\u7B2C 3 \u70B9\u6211\u4EEC\u6CA1\u6709\u5904\u7406\uFF0C\u53EA\u662F\u5355\u7EAF\u5C06\u8FD4\u56DE\u503C\u8D4B\u7ED9\u4E86 x\uFF0C\u5B83\u53EF\u4EE5\u62BD\u8C61\u6210 [[Resolve]](promise, x) \u7684\u5F62\u5F0F\uFF0C\u6709\u5982\u4E0B\u8981\u6C42\uFF1A</p><ul><li>\u5982\u679C promise \u4E0E x \u6307\u5411\u540C\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u629B\u51FA TypeError \u9519\u8BEF</li></ul><p><img src="`+r+`" alt="image"></p><ul><li><p>\u5982\u679C x \u662F\u4E00\u4E2A promise \u5B9E\u4F8B\uFF0Cpromise \u9700\u8981\u4E0E x \u4FDD\u6301\u72B6\u6001\u4E00\u81F4</p></li><li><p>\u5982\u679C x \u4E0D\u662F\u5BF9\u8C61\u6216\u51FD\u6570\uFF0Cpromise \u9700\u8981\u53D8\u6210 fulfilled \u72B6\u6001\uFF0C\u503C\u4E3A x</p></li><li><p>\u5982\u679C x \u662F\u5BF9\u8C61\u6216\u51FD\u6570\uFF0C\u62FF\u5230 <code>then = x.then</code> \u6267\u884C</p></li></ul><ul><li><p>\u6267\u884C\u629B\u51FA\u5F02\u5E38 e\uFF0Cpromise \u53D8\u4E3A reject(e)</p></li><li><p>then \u4E0D\u662F\u51FD\u6570\uFF0Cpromise \u53D8\u4E3A resolve(x)</p></li><li><p>then \u662F\u51FD\u6570\uFF0C\u6267\u884C <code>then.call(x, resolvePromise, rejectPromise)</code>\uFF0C\u53C2\u6570\u6EE1\u8DB3\u5982\u4E0B\u6761\u4EF6\uFF1A</p><ul><li><p>rejectPromise \u88AB\u8C03\u7528\u53C2\u6570\u4E3A r\uFF0Cpromise \u53D8\u4E3A reject(r)</p></li><li><p>resolvePromise \u88AB\u8C03\u7528\u53C2\u6570\u4E3A y\uFF0C\u6267\u884C [[Resolve]](promise, y)</p></li><li><p>resolvePromise \u548C resolvePromise \u90FD\u88AB\u8C03\u7528\uFF0C\u6216\u591A\u6B21\u8C03\u7528\uFF0C\u5219\u53D6\u7B2C\u4E00\u6B21\u8C03\u7528\u7ED3\u679C\uFF0C\u5176\u5B83\u5FFD\u7565</p></li><li><p>then \u8C03\u7528\u51FA\u9519 e \u65F6\uFF0C\u82E5 resolvePromise \u548C rejectPromise \u5DF2\u7ECF\u88AB\u8C03\u7528\u8FC7\u5219\u5FFD\u7565\u9519\u8BEF\uFF0C\u5426\u5219\u5C06 promise \u53D8\u4E3A reject(r)</p></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span><span class="token parameter">p2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p2 <span class="token operator">===</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;can not return same promise&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token keyword">instanceof</span> <span class="token class-name">Mpromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> called <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> then <span class="token operator">=</span> x<span class="token punctuation">.</span>then<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// y\u53EF\u80FD\u4E3A\u503C\u3001promise\u3001thenable\u5BF9\u8C61</span>
                <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
                    x<span class="token punctuation">,</span>
                    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
                        called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>p2<span class="token punctuation">,</span> y<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
                        called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u666E\u901A\u5BF9\u8C61\u548C\u51FD\u6570</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u503C</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>\u6211\u4EEC\u5C06\u4E4B\u524D\u7684\u4EE3\u7801\u6539\u9020\u4E0B\uFF0C\u5148\u5C06\u751F\u6210 x \u7684\u64CD\u4F5C\u63D0\u6210\u51FD\u6570\u65B9\u4FBF\u6211\u4EEC\u540E\u7EED\u64CD\u4F5C\uFF0C\u7136\u540E\u6309\u7167\u89C4\u5219\u7684\u8981\u6C42\uFF0C\u9010\u4E00\u5224\u65AD\uFF1A</p><ol><li><p>x \u548C promise2 \u60F3\u7B49\u5219\u629B\u51FA\u9519\u8BEF</p></li><li><p>x \u975E\u5BF9\u8C61\u548C\u51FD\u6570\uFF0C\u5C06 promise2 \u53D8\u6210 fulfilled \u72B6\u6001\uFF0C\u503C\u4E3A x</p></li><li><p>x \u662F Mpromise \u5B9E\u4F8B\u65F6\uFF0Cpromise \u9700\u8981\u4E0E x \u4FDD\u6301\u72B6\u6001\u4E00\u81F4</p></li><li><p>x \u662F thenable \u5BF9\u8C61\u65F6\uFF0C\u76F4\u63A5\u6267\u884C x.then\uFF0C\u6CE8\u610F\u6B64\u65F6\u5BF9 y \u7684\u5904\u7406\uFF0C\u4E0D\u80FD\u76F4\u63A5 <code>y =&gt; resolve(y)</code> \u5904\u7406\uFF0C\u8FD9\u6837\u4F1A\u5BFC\u81F4\u4E0D\u8BBA y \u4E3A\u4F55\u503C\uFF0Cpromise2 \u90FD\u4F1A\u53D8\u6210 fulfilled \u72B6\u6001\u3002\u6267\u884C x.then</p></li></ol><p>\u4E0D\u96BE\u53D1\u73B0\uFF0C\u5728\u94FE\u5F0F\u8C03\u7528\u65F6 <code>p2 = p1.then</code>\uFF0Cp2 \u7684\u72B6\u6001\u662F\u7531 then \u4E2D onFulfilled \u6267\u884C\u65F6\u8FD4\u56DE\u503C\u51B3\u5B9A\u7684</p><h2 id="\u5176\u5B83\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5176\u5B83\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> \u5176\u5B83\u9759\u6001\u65B9\u6CD5</h2><p>\u63A5\u4E0B\u6765\u7EE7\u7EED\u5B8C\u5584 Mpromise\uFF0C\u589E\u52A0 resolve\u3001all \u7B49\u9759\u6001\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Mpromise</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Mpromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> value
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5982\u679C value \u4E0D\u662F Mpromise \u5B9E\u4F8B\uFF0Cp2 \u53D8\u4E3A fulfilled</span>
        <span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mpromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span>j</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>p2<span class="token punctuation">,</span> value<span class="token punctuation">,</span> r<span class="token punctuation">,</span> j<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> p2
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Mpromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">catch</span><span class="token punctuation">(</span>onRjected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> resultList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mpromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">promise</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                    <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        count<span class="token operator">++</span><span class="token punctuation">;</span>
                        resultList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">resolve</span><span class="token punctuation">(</span>resultList<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> 
                    <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> p2
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token function-variable function">reace</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mpromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">promise</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
                    <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> 
                    <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> p2
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div>`,27);function v(j,g){const a=p("ExternalLinkIcon");return t(),e(c,null,[k,n("p",null,[b,n("a",m,[d,o(a)]),f,y,w]),h],64)}var P=u(i,[["render",v]]);export{P as default};
